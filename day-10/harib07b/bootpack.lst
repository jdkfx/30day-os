     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_init_keyboard
    14 00000000                                 	EXTERN	_enable_mouse
    15 00000000                                 	EXTERN	_memtest
    16 00000000                                 	EXTERN	_memman_init
    17 00000000                                 	EXTERN	_memman_free
    18 00000000                                 	EXTERN	_init_palette
    19 00000000                                 	EXTERN	_shtctl_init
    20 00000000                                 	EXTERN	_sheet_alloc
    21 00000000                                 	EXTERN	_memman_alloc_4k
    22 00000000                                 	EXTERN	_sheet_setbuf
    23 00000000                                 	EXTERN	_init_screen8
    24 00000000                                 	EXTERN	_init_mouse_cursor8
    25 00000000                                 	EXTERN	_sheet_slide
    26 00000000                                 	EXTERN	_sheet_updown
    27 00000000                                 	EXTERN	_sprintf
    28 00000000                                 	EXTERN	_putfonts8_asc
    29 00000000                                 	EXTERN	_memman_total
    30 00000000                                 	EXTERN	_sheet_refresh
    31 00000000                                 	EXTERN	_io_cli
    32 00000000                                 	EXTERN	_fifo8_status
    33 00000000                                 	EXTERN	_fifo8_get
    34 00000000                                 	EXTERN	_mouse_decode
    35 00000000                                 	EXTERN	_boxfill8
    36 00000000                                 	EXTERN	_io_stihlt
    37 00000000                                 [FILE "bootpack.c"]
    38                                          [SECTION .data]
    39 00000000                                 LC0:
    40 00000000 28 25 64 2C 20 25 64 29 00      	DB	"(%d, %d)",0x00
    41 00000009                                 LC1:
    42 00000009 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB free : %dKB",0x00
       00000013 42 20 66 72 65 65 20 3A 20 25 
       0000001D 64 4B 42 00 
    43 00000021                                 LC3:
    44 00000021 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       0000002B 34 64 5D 00 
    45 0000002F                                 LC4:
    46 0000002F 28 25 33 64 2C 20 25 33 64 29   	DB	"(%3d, %3d)",0x00
       00000039 00 
    47 0000003A                                 LC2:
    48 0000003A 25 30 32 58 00                  	DB	"%02X",0x00
    49                                          [SECTION .text]
    50 00000000                                 	GLOBAL	_HariMain
    51 00000000                                 _HariMain:
    52 00000000 55                              	PUSH	EBP
    53 00000001 89 E5                           	MOV	EBP,ESP
    54 00000003 57                              	PUSH	EDI
    55 00000004 56                              	PUSH	ESI
    56 00000005 53                              	PUSH	EBX
    57 00000006 8D 9D FFFFFE14                  	LEA	EBX,DWORD [-492+EBP]
    58 0000000C 81 EC 000001FC                  	SUB	ESP,508
    59 00000012 E8 [00000000]                   	CALL	_init_gdtidt
    60 00000017 E8 [00000000]                   	CALL	_init_pic
    61 0000001C E8 [00000000]                   	CALL	_io_sti
    62 00000021 8D 45 A4                        	LEA	EAX,DWORD [-92+EBP]
    63 00000024 50                              	PUSH	EAX
    64 00000025 6A 20                           	PUSH	32
    65 00000027 68 [00000000]                   	PUSH	_keyfifo
    66 0000002C E8 [00000000]                   	CALL	_fifo8_init
    67 00000031 8D 85 FFFFFF24                  	LEA	EAX,DWORD [-220+EBP]
    68 00000037 50                              	PUSH	EAX
    69 00000038 68 00000080                     	PUSH	128
    70 0000003D 68 [00000000]                   	PUSH	_mousefifo
    71 00000042 E8 [00000000]                   	CALL	_fifo8_init
    72 00000047 68 000000F9                     	PUSH	249
    73 0000004C 6A 21                           	PUSH	33
    74 0000004E E8 [00000000]                   	CALL	_io_out8
    75 00000053 83 C4 20                        	ADD	ESP,32
    76 00000056 68 000000EF                     	PUSH	239
    77 0000005B 68 000000A1                     	PUSH	161
    78 00000060 E8 [00000000]                   	CALL	_io_out8
    79 00000065 E8 [00000000]                   	CALL	_init_keyboard
    80 0000006A 8D 85 FFFFFF14                  	LEA	EAX,DWORD [-236+EBP]
    81 00000070 50                              	PUSH	EAX
    82 00000071 E8 [00000000]                   	CALL	_enable_mouse
    83 00000076 68 BFFFFFFF                     	PUSH	-1073741825
    84 0000007B 68 00400000                     	PUSH	4194304
    85 00000080 E8 [00000000]                   	CALL	_memtest
    86 00000085 68 003C0000                     	PUSH	3932160
    87 0000008A 89 85 FFFFFE0C                  	MOV	DWORD [-500+EBP],EAX
    88 00000090 E8 [00000000]                   	CALL	_memman_init
    89 00000095 68 0009E000                     	PUSH	647168
    90 0000009A 68 00001000                     	PUSH	4096
    91 0000009F 68 003C0000                     	PUSH	3932160
    92 000000A4 E8 [00000000]                   	CALL	_memman_free
    93 000000A9 8B 85 FFFFFE0C                  	MOV	EAX,DWORD [-500+EBP]
    94 000000AF 83 C4 24                        	ADD	ESP,36
    95 000000B2 2D 00400000                     	SUB	EAX,4194304
    96 000000B7 50                              	PUSH	EAX
    97 000000B8 68 00400000                     	PUSH	4194304
    98 000000BD 68 003C0000                     	PUSH	3932160
    99 000000C2 E8 [00000000]                   	CALL	_memman_free
   100 000000C7 E8 [00000000]                   	CALL	_init_palette
   101 000000CC 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   102 000000D3 50                              	PUSH	EAX
   103 000000D4 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   104 000000DB 50                              	PUSH	EAX
   105 000000DC FF 35 00000FF8                  	PUSH	DWORD [4088]
   106 000000E2 68 003C0000                     	PUSH	3932160
   107 000000E7 E8 [00000000]                   	CALL	_shtctl_init
   108 000000EC 50                              	PUSH	EAX
   109 000000ED 89 85 FFFFFE08                  	MOV	DWORD [-504+EBP],EAX
   110 000000F3 E8 [00000000]                   	CALL	_sheet_alloc
   111 000000F8 83 C4 20                        	ADD	ESP,32
   112 000000FB FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   113 00000101 89 C6                           	MOV	ESI,EAX
   114 00000103 E8 [00000000]                   	CALL	_sheet_alloc
   115 00000108 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   116 0000010F 89 85 FFFFFE04                  	MOV	DWORD [-508+EBP],EAX
   117 00000115 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   118 0000011C 0F AF C2                        	IMUL	EAX,EDX
   119 0000011F 50                              	PUSH	EAX
   120 00000120 68 003C0000                     	PUSH	3932160
   121 00000125 E8 [00000000]                   	CALL	_memman_alloc_4k
   122 0000012A 6A FF                           	PUSH	-1
   123 0000012C 89 85 FFFFFE00                  	MOV	DWORD [-512+EBP],EAX
   124 00000132 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   125 00000139 50                              	PUSH	EAX
   126 0000013A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   127 00000141 50                              	PUSH	EAX
   128 00000142 FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   129 00000148 56                              	PUSH	ESI
   130 00000149 E8 [00000000]                   	CALL	_sheet_setbuf
   131 0000014E 83 C4 20                        	ADD	ESP,32
   132 00000151 6A 63                           	PUSH	99
   133 00000153 6A 10                           	PUSH	16
   134 00000155 6A 10                           	PUSH	16
   135 00000157 53                              	PUSH	EBX
   136 00000158 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   137 0000015E E8 [00000000]                   	CALL	_sheet_setbuf
   138 00000163 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   139 0000016A 50                              	PUSH	EAX
   140 0000016B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   141 00000172 50                              	PUSH	EAX
   142 00000173 FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   143 00000179 E8 [00000000]                   	CALL	_init_screen8
   144 0000017E 83 C4 20                        	ADD	ESP,32
   145 00000181 6A 63                           	PUSH	99
   146 00000183 53                              	PUSH	EBX
   147 00000184 BB 00000002                     	MOV	EBX,2
   148 00000189 E8 [00000000]                   	CALL	_init_mouse_cursor8
   149 0000018E 6A 00                           	PUSH	0
   150 00000190 6A 00                           	PUSH	0
   151 00000192 56                              	PUSH	ESI
   152 00000193 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   153 00000199 E8 [00000000]                   	CALL	_sheet_slide
   154 0000019E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   155 000001A5 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   156 000001A8 89 C8                           	MOV	EAX,ECX
   157 000001AA 99                              	CDQ
   158 000001AB F7 FB                           	IDIV	EBX
   159 000001AD 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
   160 000001B3 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   161 000001BA 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
   162 000001BD 89 C8                           	MOV	EAX,ECX
   163 000001BF 99                              	CDQ
   164 000001C0 F7 FB                           	IDIV	EBX
   165 000001C2 50                              	PUSH	EAX
   166 000001C3 89 C7                           	MOV	EDI,EAX
   167 000001C5 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   168 000001CB FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   169 000001D1 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   170 000001D7 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   171 000001DA E8 [00000000]                   	CALL	_sheet_slide
   172 000001DF 83 C4 28                        	ADD	ESP,40
   173 000001E2 6A 00                           	PUSH	0
   174 000001E4 56                              	PUSH	ESI
   175 000001E5 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   176 000001EB E8 [00000000]                   	CALL	_sheet_updown
   177 000001F0 6A 01                           	PUSH	1
   178 000001F2 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   179 000001F8 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   180 000001FE E8 [00000000]                   	CALL	_sheet_updown
   181 00000203 57                              	PUSH	EDI
   182 00000204 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   183 0000020A 68 [00000000]                   	PUSH	LC0
   184 0000020F 53                              	PUSH	EBX
   185 00000210 E8 [00000000]                   	CALL	_sprintf
   186 00000215 83 C4 28                        	ADD	ESP,40
   187 00000218 53                              	PUSH	EBX
   188 00000219 6A 07                           	PUSH	7
   189 0000021B 6A 00                           	PUSH	0
   190 0000021D 6A 00                           	PUSH	0
   191 0000021F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   192 00000226 50                              	PUSH	EAX
   193 00000227 FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   194 0000022D E8 [00000000]                   	CALL	_putfonts8_asc
   195 00000232 68 003C0000                     	PUSH	3932160
   196 00000237 E8 [00000000]                   	CALL	_memman_total
   197 0000023C C1 AD FFFFFE0C 14               	SHR	DWORD [-500+EBP],20
   198 00000243 C1 E8 0A                        	SHR	EAX,10
   199 00000246 89 04 24                        	MOV	DWORD [ESP],EAX
   200 00000249 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   201 0000024F 68 [00000009]                   	PUSH	LC1
   202 00000254 53                              	PUSH	EBX
   203 00000255 E8 [00000000]                   	CALL	_sprintf
   204 0000025A 83 C4 28                        	ADD	ESP,40
   205 0000025D 53                              	PUSH	EBX
   206 0000025E 6A 07                           	PUSH	7
   207 00000260 6A 20                           	PUSH	32
   208 00000262                                 L18:
   209 00000262 6A 00                           	PUSH	0
   210 00000264 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   211 0000026B 50                              	PUSH	EAX
   212 0000026C FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   213 00000272 E8 [00000000]                   	CALL	_putfonts8_asc
   214 00000277 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   215 0000027D E8 [00000000]                   	CALL	_sheet_refresh
   216 00000282 83 C4 1C                        	ADD	ESP,28
   217 00000285                                 L2:
   218 00000285 E8 [00000000]                   	CALL	_io_cli
   219 0000028A 68 [00000000]                   	PUSH	_keyfifo
   220 0000028F E8 [00000000]                   	CALL	_fifo8_status
   221 00000294 68 [00000000]                   	PUSH	_mousefifo
   222 00000299 89 C3                           	MOV	EBX,EAX
   223 0000029B E8 [00000000]                   	CALL	_fifo8_status
   224 000002A0 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   225 000002A3 5B                              	POP	EBX
   226 000002A4 5E                              	POP	ESI
   227 000002A5 85 C0                           	TEST	EAX,EAX
   228 000002A7 0F 84 000001DD                  	JE	L19
   229 000002AD 68 [00000000]                   	PUSH	_keyfifo
   230 000002B2 E8 [00000000]                   	CALL	_fifo8_status
   231 000002B7 59                              	POP	ECX
   232 000002B8 85 C0                           	TEST	EAX,EAX
   233 000002BA 0F 85 00000180                  	JNE	L20
   234 000002C0 68 [00000000]                   	PUSH	_mousefifo
   235 000002C5 E8 [00000000]                   	CALL	_fifo8_status
   236 000002CA 5A                              	POP	EDX
   237 000002CB 85 C0                           	TEST	EAX,EAX
   238 000002CD 74 B6                           	JE	L2
   239 000002CF 68 [00000000]                   	PUSH	_mousefifo
   240 000002D4 E8 [00000000]                   	CALL	_fifo8_get
   241 000002D9 89 C3                           	MOV	EBX,EAX
   242 000002DB E8 [00000000]                   	CALL	_io_sti
   243 000002E0 0F B6 C3                        	MOVZX	EAX,BL
   244 000002E3 50                              	PUSH	EAX
   245 000002E4 8D 85 FFFFFF14                  	LEA	EAX,DWORD [-236+EBP]
   246 000002EA 50                              	PUSH	EAX
   247 000002EB E8 [00000000]                   	CALL	_mouse_decode
   248 000002F0 83 C4 0C                        	ADD	ESP,12
   249 000002F3 85 C0                           	TEST	EAX,EAX
   250 000002F5 74 8E                           	JE	L2
   251 000002F7 FF B5 FFFFFF1C                  	PUSH	DWORD [-228+EBP]
   252 000002FD FF B5 FFFFFF18                  	PUSH	DWORD [-232+EBP]
   253 00000303 68 [00000021]                   	PUSH	LC3
   254 00000308 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   255 0000030B 53                              	PUSH	EBX
   256 0000030C E8 [00000000]                   	CALL	_sprintf
   257 00000311 83 C4 10                        	ADD	ESP,16
   258 00000314 8B 85 FFFFFF20                  	MOV	EAX,DWORD [-224+EBP]
   259 0000031A A9 00000001                     	TEST	EAX,1
   260 0000031F 74 04                           	JE	L11
   261 00000321 C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   262 00000325                                 L11:
   263 00000325 A9 00000002                     	TEST	EAX,2
   264 0000032A 74 04                           	JE	L12
   265 0000032C C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   266 00000330                                 L12:
   267 00000330 83 E0 04                        	AND	EAX,4
   268 00000333 74 04                           	JE	L13
   269 00000335 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   270 00000339                                 L13:
   271 00000339 6A 1F                           	PUSH	31
   272 0000033B 68 00000097                     	PUSH	151
   273 00000340 6A 10                           	PUSH	16
   274 00000342 6A 20                           	PUSH	32
   275 00000344 6A 0E                           	PUSH	14
   276 00000346 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   277 0000034D 50                              	PUSH	EAX
   278 0000034E FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   279 00000354 E8 [00000000]                   	CALL	_boxfill8
   280 00000359 53                              	PUSH	EBX
   281 0000035A 6A 07                           	PUSH	7
   282 0000035C 6A 10                           	PUSH	16
   283 0000035E 6A 20                           	PUSH	32
   284 00000360 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   285 00000367 50                              	PUSH	EAX
   286 00000368 FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   287 0000036E E8 [00000000]                   	CALL	_putfonts8_asc
   288 00000373 8B 85 FFFFFF18                  	MOV	EAX,DWORD [-232+EBP]
   289 00000379 03 BD FFFFFF1C                  	ADD	EDI,DWORD [-228+EBP]
   290 0000037F 83 C4 34                        	ADD	ESP,52
   291 00000382 01 85 FFFFFE10                  	ADD	DWORD [-496+EBP],EAX
   292 00000388 0F 88 000000A3                  	JS	L21
   293 0000038E                                 L14:
   294 0000038E 85 FF                           	TEST	EDI,EDI
   295 00000390 0F 88 00000094                  	JS	L22
   296 00000396                                 L15:
   297 00000396 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   298 0000039D 83 E8 10                        	SUB	EAX,16
   299 000003A0 39 85 FFFFFE10                  	CMP	DWORD [-496+EBP],EAX
   300 000003A6 7E 06                           	JLE	L16
   301 000003A8 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
   302 000003AE                                 L16:
   303 000003AE 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   304 000003B5 83 E8 10                        	SUB	EAX,16
   305 000003B8 39 C7                           	CMP	EDI,EAX
   306 000003BA 7E 02                           	JLE	L17
   307 000003BC 89 C7                           	MOV	EDI,EAX
   308 000003BE                                 L17:
   309 000003BE 57                              	PUSH	EDI
   310 000003BF FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   311 000003C5 68 [0000002F]                   	PUSH	LC4
   312 000003CA 53                              	PUSH	EBX
   313 000003CB E8 [00000000]                   	CALL	_sprintf
   314 000003D0 6A 0F                           	PUSH	15
   315 000003D2 6A 4F                           	PUSH	79
   316 000003D4 6A 00                           	PUSH	0
   317 000003D6 6A 00                           	PUSH	0
   318 000003D8 6A 0E                           	PUSH	14
   319 000003DA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   320 000003E1 50                              	PUSH	EAX
   321 000003E2 FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   322 000003E8 E8 [00000000]                   	CALL	_boxfill8
   323 000003ED 83 C4 2C                        	ADD	ESP,44
   324 000003F0 53                              	PUSH	EBX
   325 000003F1 6A 07                           	PUSH	7
   326 000003F3 6A 00                           	PUSH	0
   327 000003F5 6A 00                           	PUSH	0
   328 000003F7 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   329 000003FE 50                              	PUSH	EAX
   330 000003FF FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   331 00000405 E8 [00000000]                   	CALL	_putfonts8_asc
   332 0000040A 57                              	PUSH	EDI
   333 0000040B FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   334 00000411 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   335 00000417 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   336 0000041D E8 [00000000]                   	CALL	_sheet_slide
   337 00000422 83 C4 28                        	ADD	ESP,40
   338 00000425 E9 FFFFFE5B                     	JMP	L2
   339 0000042A                                 L22:
   340 0000042A 31 FF                           	XOR	EDI,EDI
   341 0000042C E9 FFFFFF65                     	JMP	L15
   342 00000431                                 L21:
   343 00000431 C7 85 FFFFFE10 00000000         	MOV	DWORD [-496+EBP],0
   344 0000043B E9 FFFFFF4E                     	JMP	L14
   345 00000440                                 L20:
   346 00000440 68 [00000000]                   	PUSH	_keyfifo
   347 00000445 E8 [00000000]                   	CALL	_fifo8_get
   348 0000044A 89 C3                           	MOV	EBX,EAX
   349 0000044C E8 [00000000]                   	CALL	_io_sti
   350 00000451 53                              	PUSH	EBX
   351 00000452 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   352 00000455 68 [0000003A]                   	PUSH	LC2
   353 0000045A 53                              	PUSH	EBX
   354 0000045B E8 [00000000]                   	CALL	_sprintf
   355 00000460 6A 1F                           	PUSH	31
   356 00000462 6A 0F                           	PUSH	15
   357 00000464 6A 10                           	PUSH	16
   358 00000466 6A 00                           	PUSH	0
   359 00000468 6A 0E                           	PUSH	14
   360 0000046A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   361 00000471 50                              	PUSH	EAX
   362 00000472 FF B5 FFFFFE00                  	PUSH	DWORD [-512+EBP]
   363 00000478 E8 [00000000]                   	CALL	_boxfill8
   364 0000047D 83 C4 2C                        	ADD	ESP,44
   365 00000480 53                              	PUSH	EBX
   366 00000481 6A 07                           	PUSH	7
   367 00000483 6A 10                           	PUSH	16
   368 00000485 E9 FFFFFDD8                     	JMP	L18
   369 0000048A                                 L19:
   370 0000048A E8 [00000000]                   	CALL	_io_stihlt
   371 0000048F E9 FFFFFDF1                     	JMP	L2
